/* tslint:disable */
/* eslint-disable */
/**
 * roomservice
 * An implementation of joinable rooms
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: decline@umass.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Room,
    RoomFromJSON,
    RoomToJSON,
} from '../models';

export interface GetRoomByCodeRequest {
    code: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Returns a Room
     */
    async getRoomByCodeRaw(requestParameters: GetRoomByCodeRequest): Promise<runtime.ApiResponse<Room>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling getRoomByCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/room/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => RoomFromJSON(jsonValue));
    }

    /**
     * Returns a Room
     */
    async getRoomByCode(requestParameters: GetRoomByCodeRequest): Promise<Room> {
        const response = await this.getRoomByCodeRaw(requestParameters);
        return await response.value();
    }

}
